<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on Heartysoft Solutions Limited</title>
    <link>http://heartysoft.com/tags/aws/</link>
    <description>Recent content in Aws on Heartysoft Solutions Limited</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 May 2017 18:27:05 +0000</lastBuildDate>
    
	<atom:link href="http://heartysoft.com/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cross AWS Account Builds - Part 1</title>
      <link>http://heartysoft.com/ashic/blog/2017/05/cross-aws-account-builds-part-1/</link>
      <pubDate>Tue, 23 May 2017 18:27:05 +0000</pubDate>
      
      <guid>http://heartysoft.com/ashic/blog/2017/05/cross-aws-account-builds-part-1/</guid>
      <description>Getting cross AWS account permissioning working seems like a black art. At my current client, we have our own AWS Account, with stuff like Kubernetes, Elasticsearch, Postgres, Cassandra, etc. running. However, another team manages a Gitlab Enterprise set up which is hosting our codebases. We could set up our own source control, and build server, and we very well might do that. But for now, the quickest bang for the buck is to leverage what the other team are allowing us to use.</description>
    </item>
    
    <item>
      <title>Public ELBs with Private Kubernetes</title>
      <link>http://heartysoft.com/ashic/blog/2017/05/public-elbs-with-private-kubernetes/</link>
      <pubDate>Mon, 22 May 2017 18:17:00 +0000</pubDate>
      
      <guid>http://heartysoft.com/ashic/blog/2017/05/public-elbs-with-private-kubernetes/</guid>
      <description>Kubernetes services allow us to address a collection of pods through a stable endpoint. Depending on the service type, this endpoint may be addressable only from within the cluster, from the same network, or even from the public internet. When running on AWS, setting the service type for a service to LoadBalancer will create an AWS ELB, which can be used as the endpoint. Wih a Kubernetes cluster running on public subnets, this just works.</description>
    </item>
    
    <item>
      <title>Friendly Names for AWS ELBS</title>
      <link>http://heartysoft.com/ashic/blog/2017/05/friendly-names-for-aws-elbs/</link>
      <pubDate>Sun, 14 May 2017 17:54:05 +0000</pubDate>
      
      <guid>http://heartysoft.com/ashic/blog/2017/05/friendly-names-for-aws-elbs/</guid>
      <description>Elastic Load Balancers (ELBs) in AWS allow us to access load balanced resources via single endpoints. While useful, a common problem is that they have hideous names. A dns name like internal-aaaaaabbbbcc359111e789ac0ac70354142-1111223232.eu-west-1.elb.amazonaws.com isn&amp;rsquo;t the easiest thing in the world to remember, share, or use. We can use AWS Route53 to expose these load balancers with &amp;ldquo;friendly&amp;rdquo; names.
Say, I have a domain, mysite.com registered via Route53 as a public Hosted Zone.</description>
    </item>
    
  </channel>
</rss>